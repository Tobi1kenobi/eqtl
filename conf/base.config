/*
========================================================================================
    nf-core/eqtl Nextflow base config file
========================================================================================
    A 'blank slate' config file, appropriate for general use on most high performance
    compute environments. Assumes that all software is installed and available on
    the PATH. Runs in `local` mode - all jobs will be run on the logged in environment.
----------------------------------------------------------------------------------------
*/
params{
    chunkSize=70
    mem1= 10000
    LIMIX{
        run=false
    }
    TensorQTL{
        run=true
        utilise_gpu = false
        use_gt_dosage = true 
        optimise_pcs = true
        interaction_file='' // to run interaction, provide a TSV with genotype ID and interaction 

    }
    outdir='results'
    copy_mode = "rellink"
    genotype_phenotype_mapping_file=''
    utilise_gpu = false
    gtf_type='gene' //# 'gene|transcript'
    input_tables_column_delimiter = '\t' 
    n_min_cells = '5' // The number of cells for individual to use. 
    n_min_individ = '30' //Do not select less than 25 since this may result in a permutation issue with tensorqtl
    aggregation_method = 'dMean,dSum' // can be: dMean, dSum or both separated by comma
    dMean_norm_method = 'cp10k' // Normlisation method for dMean, can be cp10k or a precomputed normalised counts layer in the anndata file
    inverse_normal_transform = 'FALSE' // Inverse normal trasnform data as part of normalisation
    bcftools_filters = '--max-alleles 2 -m2 -M2 -v snps'
    //plink2_filters = '--allow-extra-chr 0 --chr 1-22 XY --output-chr chrM --indep-pairwise 250 50 0.2 --snps-only --rm-dup exclude-all'
    plink2_filters = '--allow-extra-chr 0 --chr 1-22 XY --output-chr chrM --snps-only --rm-dup exclude-all'
    maf = 0.1
    hwe= 0.0000001
    windowSize=100000
    numberOfPermutations=1000
    filter_method = 'HVG' // filterByExpr|HVG|None
    norm_method = 'DESEQ'  //'DESEQ|TMM|NONE'
    percent_of_population_expressed=0.2 // whats the proportion of individuals that has to have the value !=0
    tmpdir = "${launchDir}/work"

    covariates{
        nr_phenotype_pcs = '10,20,30'
        nr_genotype_pcs = 10
        extra_covariates_file = ''
    }

    eqtl_container = 'https://yascp.cog.sanger.ac.uk/public/singularity_images/eqtl_19_09_2023.img'
    eqtl_docker='mercury/eqtl:latest'
}


process {
    cache = 'lenient'
    withLabel:process_low {
        cpus   = { 1     * task.attempt    }
        memory = { 12.GB * task.attempt }
        time   = { 12.h   * task.attempt   }
    }
    withLabel:process_medium {
        cpus   = { 6     * task.attempt   }
        memory = { 36.GB * task.attempt  }
        time   = { 12.h   * task.attempt    }
    }
    withLabel:process_high {
        cpus   = { 12    * task.attempt    }
        memory = { 72.GB * task.attempt }
        time   = { 16.h  * task.attempt   }
    }
    withLabel:process_long {
        time   = { 20.h  * task.attempt    }
    }
    withLabel:process_high_memory {
        memory = { 200.GB * task.attempt  }
    }
    withLabel:process_medium_memory {
        memory = { 100.GB * task.attempt }
    }

    withLabel:error_ignore {
        errorStrategy = 'ignore'
    }
    withLabel:error_retry {
        errorStrategy = 'retry'
        maxRetries    = 2
    }
    withName: LIMIX{
        errorStrategy = { task.attempt <= 2 ? 'retry' : 'ignore' }
    }
}
